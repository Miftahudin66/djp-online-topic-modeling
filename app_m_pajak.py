# -*- coding: utf-8 -*-
"""app_M-Pajak.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZDXzUL7r8oXlVB5UVpIQpDvkRZxAV2C9
"""



import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Judul
st.title("Dashboard Pemetaan Topik Masalah DJP Online")

# Load data
@st.cache_data
def load_data():
    return pd.read_csv("hasil_topik.csv")

df = load_data()

# Tampilkan distribusi topik
st.header("Distribusi Topik Dominan pada Ulasan")
fig1 = plt.figure(figsize=(7,7))
df['Topik_1'].value_counts().plot.pie(autopct='%1.1f%%')
plt.ylabel('')
st.pyplot(fig1)

# Tampilkan wordcloud
st.header("Wordcloud Topik")
topik_options = df['Topik_1'].unique().tolist()
pilih_topik = st.selectbox("Pilih Topik:", topik_options)

# Map ke nomor file kalau perlu
topik_map = {
    'Kesulitan Melapor & Bayar Pajak': '1',
    'Masalah Kode Verifikasi & OTP': '2',
    'Ulasan Campuran: Puas & Keluhan Error': '3',
    'Gagal Akses atau Daftar Akun': '4',
    'Masalah Pembuatan & Validasi NPWP': '5'
}

topik_no = topik_map.get(pilih_topik, '1')

try:
    st.image(f"wordcloud_topik_{topik_no}.png", caption=f"Wordcloud {pilih_topik}")
except FileNotFoundError:
    st.info(f"Wordcloud for topic '{pilih_topik}' not available.")


# Tampilkan contoh ulasan per topik
st.header("Contoh Ulasan untuk Topik Ini")
topic_subset = df[df['Topik_1'] == pilih_topik]['clean_content']
sample_size = min(5, len(topic_subset))
if sample_size > 0:
    sample = topic_subset.sample(sample_size, random_state=42).tolist()
    for i, s in enumerate(sample, 1):
        st.write(f"{i}. {s}")
else:
    st.info("No reviews available for this topic.")


# Tampilkan bar chart kata topik (jika ada file bar chart)
st.header("Bar Chart Kata Topik (Jika tersedia)")
try:
    st.image(f"barchart_topik_{topik_no}.png", caption=f"Bar Chart {pilih_topik}")
except FileNotFoundError:
    st.info(f"Bar chart for topic '{pilih_topik}' not available.")
